@import '../__base/variables/colors';
@import '../__base/variables/variables';
@import '../__base/animation';
@import '../__base/mixins';

@root: ~'.Button';

@{root} {
  .button-base();

  &__text {
    .button-base-text();
  }

  &__icon {
    .button-icon();
  }

  &__icon + &__text,
  &__text + &__icon {
    margin-left: 6px;
  }

  &__loader {
    display: inline-flex;
  
    .align-full();

    &:before {
      content: '';
      display: inline-block;
      box-sizing: border-box;
      border: 3px solid #fff;
      border-right-color: transparent;
      border-radius: 50%;
      animation: rotate 1s linear infinite;
    }
  }

  &_view {
    &_default,
    &_outline,
    &_fab {
      .button();

      border-width: @btn-border-width;
      border-style: @btn-border-style;
    }

    &_link {
      .link();

      white-space: nowrap;
    }

    &_icon {
      .button();

      background-color: transparent;
    }

    &_default {
      .for-each(@pair in @theme-colors) {
        @key: at(@pair, 1);
        @value: at(@pair, 2);

        &@{root}_color_@{key} {
          .button-variant(@value, @value, transparent);
        }
      }
    }

    &_outline {
      .for-each(@pair in @theme-colors) {
        @key: at(@pair, 1);
        @value: at(@pair, 2);

        &@{root}_color_@{key} {
          .button-outline-variant(@value, @value, @value);
        }
      }
    }

    &_default,
    &_outline {
      &@{root}_size {
        &_s {
          .button-size(
            @btn-padding-y-small,
            @btn-padding-x-small,
            @btn-height-small,
            @font-size-small,
            @btn-line-height-small,
            @btn-border-radius
          );

          @{root} {
            &__loader {
              &:before {
                width: 16px;
                height: 16px;
              }
            }
          }
        }

        &_m {
          .button-size(
            @btn-padding-y-medium,
            @btn-padding-x-medium,
            @btn-height-medium,
            @font-size-medium,
            @btn-line-height-medium,
            @btn-border-radius
          );

          @{root} {
            &__loader {
              &:before {
                width: 20px;
                height: 20px;
              }
            }
          }
        }

        &_l {
          .button-size(
            @btn-padding-y-large,
            @btn-padding-x-large,
            @btn-height-large,
            @font-size-large,
            @btn-line-height-large,
            @btn-border-radius
          );

          @{root} {
            &__loader {
              &:before {
                width: 24px;
                height: 24px;
              }
            }
          }
        }
      }
    }

    &_link {
      .for-each(@pair in @theme-colors) {
        @key: at(@pair, 1);
        @value: at(@pair, 2);

        &@{root}_color_@{key} {
          .button-link-variant(@value);
        }
      }

      &@{root}_size {
        &_s {
          .link-size(@font-size-small);
        }

        &_m {
          .link-size(@font-size-medium);
        }

        &_l {
          .link-size(@font-size-large);
        }
      }

      @{root}__text {
        .button-text();
      }
    }

    &_fab {
      .for-each(@pair in @palette) {
        @key: at(@pair, 1);
        @value: at(@pair, 2);
        .button-fab-variant(@white, @gray-500, @key, @value);
      }

      &@{root}_size {
        &_m {
          width: 30px;
          .button-size(0, 0, 30px, inherit, 28px, 50%);
        }
      }
    }
  }

  &_fullWidth {
    width: 100%;
  }

  &_disabled {
    .button-disabled();
  }

  &_fetching {
    @{root}__text, @{root}__icon {
      opacity: 0;
    }
  }
}
